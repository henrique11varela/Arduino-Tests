#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

int x = 0;/*, y = 31;
bool xIncrement = true, yIncrement = true;
int r = 4;*/
bool goingRight = true;

static const unsigned char PROGMEM logo_bmp[] = {0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011011, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00111011, 0b11000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b01111011, 0b11110000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b11111011, 0b11111100, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000011, 0b11111011, 0b11111111, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000111, 0b11111011, 0b11111111, 0b11000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00001111, 0b11111011, 0b11111111, 0b11100001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b01111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000001, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000111, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b11100000, 0b00000000, 0b00001111, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b11110000, 0b00000000, 0b00011111, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000011, 0b11111100, 0b00000000, 0b00111111, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000111, 0b11111110, 0b00000000, 0b01111111, 0b11111111, 0b11110011, 0b11111111, 0b11110001, 0b10001111, 0b11111111, 0b00000000, 0b11111111, 0b11111111, 0b11100011, 0b11111111, 0b11110001, 0b10011111, 0b11111111, 0b10000001, 0b11111111, 0b11111111, 0b11000011, 0b11111111, 0b11110001, 0b10001111, 0b11111111, 0b11100011, 0b11111111, 0b11111111, 0b00000011, 0b11111111, 0b11110001, 0b10000111, 0b11111111, 0b11110111, 0b11111111, 0b11111110, 0b00000011, 0b11111111, 0b11110001, 0b10000011, 0b11111111, 0b11110001, 0b11111111, 0b11111000, 0b00000011, 0b11111111, 0b11110001, 0b10000001, 0b11111111, 0b11111100, 0b11111111, 0b11110000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b11111111, 0b11111110, 0b01111111, 0b11100000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b01111111, 0b11111111, 0b00011111, 0b11000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b00111111, 0b11111111, 0b11000111, 0b00000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b00011111, 0b11111111, 0b11110010, 0b00000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b00000111, 0b11111111, 0b11111000, 0b00000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b00000011, 0b11111111, 0b11111100, 0b00000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b00001001, 0b11111111, 0b11111110, 0b00000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b00011100, 0b11111111, 0b11111111, 0b10000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b00111110, 0b01111111, 0b11111111, 0b11000000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b01111111, 0b00111111, 0b11111111, 0b11100000, 0b00000011, 0b11111111, 0b11110001, 0b10000000, 0b11111111, 0b10011111, 0b11111111, 0b11110000, 0b00000011, 0b11111111, 0b11110001, 0b10000001, 0b11111111, 0b11001111, 0b11111111, 0b11111100, 0b00000011, 0b11111111, 0b11110001, 0b10000011, 0b11111111, 0b11100111, 0b11111111, 0b11111110, 0b00000011, 0b11111111, 0b11110001, 0b10000111, 0b11111111, 0b11000011, 0b11111111, 0b11111111, 0b00000011, 0b11111111, 0b11110001, 0b10001111, 0b11111111, 0b10000001, 0b11111111, 0b11111111, 0b10000011, 0b11111111, 0b11110001, 0b10000111, 0b11111111, 0b00000000, 0b11111111, 0b11111111, 0b11100011, 0b11111111, 0b11110001, 0b10000011, 0b11111110, 0b00000000, 0b00111111, 0b11111111, 0b11110011, 0b11111111, 0b11110001, 0b10000001, 0b11111100, 0b00000000, 0b00011111, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b11111000, 0b00000000, 0b00001111, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b01110000, 0b00000000, 0b00000111, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00100000, 0b00000000, 0b00000011, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000001, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b01111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00111111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b11111011, 0b11111111, 0b11110001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00001111, 0b11111011, 0b11111111, 0b11100001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000111, 0b11111011, 0b11111111, 0b10000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000011, 0b11111011, 0b11111110, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b11111011, 0b11111000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111011, 0b11100000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b01111011, 0b11000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00111011, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111};

void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS); //starts screen
  display.clearDisplay();
  display.drawBitmap(0, 0, logo_bmp, 64, 64, 1);
  display.display();
}


void loop() {
  /*if (x > SCREEN_WIDTH - r)
    xIncrement = false;
  else if (x < 0 + r)
    xIncrement = true;

  if (y > SCREEN_HEIGHT - r)
    yIncrement = false;
  else if (y < 0 + r)
    yIncrement = true;

  if (xIncrement)
    x++;
  else
    x--;

  if (yIncrement)
    y++;
  else
    y--;

  display.clearDisplay();
  display.drawCircle(x, y, r, WHITE);
  display.display();*/
  if (goingRight) 
  {
    x++;
  }
  else 
  {
    x--;
  }
  if (x == 0)
  {
    goingRight = true;
  }
  else if (x == SCREEN_WIDTH - 64) {
    goingRight = false;
  }

  display.clearDisplay();
  display.drawBitmap(x, 0, logo_bmp, 64, 64, 1);
  display.display();
}

//clears display buffer
//display.clearDisplay();
